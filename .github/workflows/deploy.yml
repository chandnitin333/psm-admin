name: Deploy Angular to VPS

on:
  workflow_dispatch:
    inputs:
      branches:
        description: "Git Branches (comma-separated, e.g. main, dev, feature/login)"
        required: true
        default: "main"
        type: string

      environment:
        description: "Target Environment"
        required: true
        default: "production"
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  build-and-deploy:
    name: Build and Deploy Angular App
    runs-on: ubuntu-latest

    strategy:
      matrix:
        branch: ${{ fromJSON('[${{ github.event.inputs.branches }}]') }} # Converts user input into matrix dynamically
        environment: [development, staging, production] # Runs for all environments

    steps:
      - name: Show selected branch and environment
        run: |
          echo "🚀 Deploying from branch: ${{ matrix.branch }}"
          echo "🌍 Target environment: ${{ matrix.environment }}"

      - name: Generate Deployment Summary
        run: |
          echo "### 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ matrix.branch }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** \`${{ matrix.environment }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ✅ Deployment Started" >> $GITHUB_STEP_SUMMARY

      - name: Checkout selected branch
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build --configuration=${{ matrix.environment }}

      - name: Deploy to VPS via SCP
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "dist/**"
          target: "/var/www/html/${{ matrix.environment }}"

      - name: Restart Nginx (optional)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo systemctl restart nginx
